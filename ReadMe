----------------------------------------------------------------------------
 Assembly Line Simulator Part 2: Dispatcher/Scheduler Simulation.
----------------------------------------------------------------------------

////////////////////////////////// Overview ///////////////////////////////////

ALS is a Facility (Assemply Line) that processes packages.
Goal: Check the efficiency of an assembly line and how different workers change
productivity.

/////////////////////// Important structures / classes ////////////////////////

Packages-> Each package has an amount of units to be processed

PackageQueue -> A data structure (queue) to store  packages

Factory -> Packages are taken in by the Factory into a buffer(a queue), where
				 	 they await to be dispatched and worked on by several Assembly Lines.

AssemblyLine -> There are many AssemblyLines. They have an associated rate
								of work at which the process packages. They process Packages
								and then they ship them.

Dispatcher -> Decides where to send the packages.


//////////////////////// Struct and Class Interfaces //////////////////////////
 Package -> contains important information about each package.
	Data:
    string order_number
    double unit_number
    double units_worked
    int time_Arrived
    int time_Shipped
    bool isShipped
Factory -> Handles input of Pkgs into a buffer(a queue) and runs Assembly Lines.
	Public Functions:
		Factort(int numAssemblyLines, double rates[] )
		int run()
		void getPkgOrder();

AssemblyLine -> Processes packages and outputs to console the shipping time.
	Public Functions:
		void process(Package * PkgOrder, int orderSize);
		void ship(Package * currentPkg);

PackageQueue ->  A queue implementation using linked lists.
	Public Functions:
		bool isEmpty();
    void enqueue(Package pkg);
    void dequeue();
    void display();
		Package * getFront();


///////////////////// Struct/Class Inheritance hierarchy //////////////////////

facmain
	Factory
		AssemblyLine
			Worker
			PackageQueue
				Package
				node

//////////////////////////// Compile Instructions /////////////////////////////

g++ ......



///////////////////////////////////////////////////////////old stuff
/// Program Interface

	Program will take in the following data:
		a) Number of Wrokers (num_workers) and their rates (ratesList) as the
		argument.
		b) List of packages  (list_of_packages) on a separate file. This data
		will be accessed with cin. It will be given in the following format :
			Package order number S123 with 9 units arrived at time 0

///	Use.
	This program was adapted to use with the facmain.cpp  file. In the case that
	you want to test in with another file, please read the following:
		The frontier class of my program is the Factory class. To process a list of
		packages you must make your own main, and in it  use the run() and pass the
		number of workers and their respective rates. Also, you must run the
		program along with a file contating pacakge orders



//NOTES:
ADD Ccompilation instructions

// no talking about cin, or any function levels

/// Notes, dont go over the lines
